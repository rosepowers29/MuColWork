import numpy as np
from array import array
import matplotlib.pyplot as plt
import mplhep as hep
import uproot
import ROOT
from matplotlib.ticker import (MultipleLocator, AutoMinorLocator)

#MAIA format python plots (!!)
###############RESO PLOT IN PAPER GENERATED WITH THE BELOW####################


#fit params
'''
p1B = 2.459235256416521e-05
p2B = 7.965831974818221
p3B = 0.0

p1nB = 0.21643059582984278
p2nB = 0
p3nB = 0.0
'''
#fit params just transition region
'''
p1B = 0.773440860434701
p2B = 14.199198549864672
p3B = 0.02756661822031337

p1nB = 1.1313029939176593
p2nB = 0.0
p3nB = 0.017581865787574914
'''

#fit params for just barrel
'''
p1B = 0.6482361734460812
p2B = 8.53652626081656
p3B = 0.0010802814964237558

p1nB = 0.5593613705430001
p2nB = 0.0
p3nB = 2.207554610452237e-09
'''


#fit params for just endcap

p1B = 0.21457279256970954
p2B = 8.21873222259266
p3B = 0.0

p1nB = 0.1835049484201535
p2nB = 0.0
p3nB = 0.0

#redefine the fit function
def py_resofit(stoch, noise, const, E):
    return np.sqrt((stoch**2)/E+(noise/E)**2+const**2)

Epoints = np.linspace(0.01,1000.,1000)
resopoints_B=[]
resopoints_nB = []

for energy in Epoints:
    resopoints_B.append(py_resofit(p1B,p2B,p3B, energy))
    resopoints_nB.append(py_resofit(p1nB, p2nB, p3nB, energy))

#define the arrays (generated with the fit)
#finegrain, barrel
'''
e_arr_B = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_B = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_B = array('d', [0.804870353475822, 0.5034504356308986, 0.3112184418392616, 0.29120373624001133, 0.22175729470611236, 0.24699391981301316, 0.19896840275627334, 0.15923513635110423])
sigma_err_arr_B = array('d',  [0.10333480252776134, 0.04975268514309811, 0.03490151712084741, 0.018687230791797127, 0.01734151056129267, 0.026517722260353024, 0.02441427277360067, 0.011311382659140001])



e_arr_nB = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_nB = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_nB = array('d',[0.13422389605390028, 0.11928952856594598, 0.10850850769610054, 0.10029063230953816, 0.09105502609053802, 0.08691280167996099, 0.08399870940450747, 0.07808494413152138])

sigma_err_arr_nB=array('d', [0.0025693366653904287, 0.0018371460978379855, 0.0016389772611454245, 0.0014002216830720504, 0.0011606037686362342, 0.001187424995036837, 0.0011861123843078733, 0.0011284370650040468])
'''
#FineGrain, endcaps

e_arr_nB = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_nB = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_nB = array('d', [0.050927007018643146, 0.04430496050768402, 0.038626585160039036, 0.03478510264085363, 0.03240985482452991, 0.03250328501062851, 0.02930795037852461, 0.02902476344469647])
sigma_err_arr_nB = array('d', [0.0008563740443471302, 0.0006947155153048147, 0.0006734088103457769, 0.0006539886701347371, 0.0005673778204113022, 0.0005838840040010909, 0.0004781016239498361, 0.00047097178596691193])


e_arr_B = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_B = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_B = array('d', [0.6041052290061067, 0.5525780965097337, 0.3923846387878679, 0.3406276980044898, 0.29429597177042494, 0.25699118191041453, 0.2364130587553673, 0.2069687753975216])
sigma_err_arr_B = array('d', [0.03557108455080765, 0.02334928319271984, 0.022097537221631602, 0.016072693963660678, 0.01351485266642563, 0.014259167050229615, 0.012395522366945744, 0.009896993393491593])


#FineGrain, central barrel
'''
e_arr_nB = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_nB = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_nB = array('d', [0.158808941229739, 0.14242457369107517, 0.12796183973027073, 0.12001559549624065, 0.11104233647237698, 0.10391337467812699, 0.0979290243831676, 0.0960519772852796])
sigma_err_arr_nB = array('d', [0.0018301624950347178, 0.0016518988666634898, 0.001557574670130471, 0.0014126974929129232, 0.001316986993408223, 0.0012513697619266836, 0.0011789027008708985, 0.0012907027500942275])

e_arr_B = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_B = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_B = array('d', [0.7302956109948894, 0.4585767158993229, 0.3727877478093142, 0.31930925851737463, 0.3094073775368462, 0.2813613729585491, 0.24804369225726047, 0.19822236435290658])
sigma_err_arr_B = array('d', [0.04440035218526622, 0.02243103358593901, 0.02004784484542277, 0.013639251114574452, 0.013680775266843082, 0.01385128832734478, 0.011816911867011254, 0.009269845642665475])
'''
#FineGrain, transition regions
'''
e_arr_nB = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_nB = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_nB = array('d', [0.19820772173865836, 0.22103934839513956, 0.20248715834386208, 0.2024440678053787, 0.19263519528908096, 0.1831844689713017, 0.17779161909572977, 0.1771124889272018])
sigma_err_arr_nB = array('d', [0.002764051353911237, 0.003156025958476097, 0.0031236654436000155, 0.0031658880776131715, 0.0029670950331317086, 0.0030347928149955933, 0.002797138312064712, 0.0029853321353245227])


e_arr_B = array('d', [12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5])
e_err_arr_B = array('d', [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])
sigma_arr_B = array('d', [0.6978745549814793, 0.5244205602534022, 0.4226919416842883, 0.4004206450567215, 0.3937516733900267, 0.30845311419054233, 0.33053662944289125, 0.28276046317354436])
sigma_err_arr_B = array('d', [0.05507536289311982, 0.02496618294657771, 0.02024942325554785, 0.017964080061944165, 0.020427116799848155, 0.012764167646141134, 0.014440988658673826, 0.012769621273906934])
'''

#With BIB overlay, dR < 0.1
#e_arr_B=array('d', [25.0, 75.0, 125.0, 175.0, 225.0, 275.0, 325.0, 375.0, 425.0, 475.0, 525.0, 575.0, 625.0, 675.0, 725.0, 775.0, 825.0, 875.0, 925.0, 975.0])

#endcaps
'''
sigma_arr_B= array('d', [0.31007633649912003, 0.1259033403295962, 0.07824023413319385, 0.055099551669105566, 0.04111527521673873, 0.029629044010660733, 0.028986374851902898, 0.023472718898690185, 0.022359674637235507, 0.017916723636377325, 0.01884775122240005, 0.016933181357844003, 0.014516954671462783, 0.013342561103333603, 0.014063785425101815, 0.014964857517570497, 0.01209304960006033, 0.011513752985066206, 0.012987017754769912, 0.010701420313895382])


sigma_err_arr_B = array('d',[0.007187854800500382, 0.00495534899453836, 0.0023563637769052695, 0.0017138035011120233, 0.0014425790972684219, 0.0020147862671344927, 0.001990455593587943, 0.0016492669923632765, 0.0011666282546244425, 0.0012066089697849846, 0.0010019427023397823, 0.0009534599221179933, 0.0007841520644783322, 0.0007137642720666604, 0.0007123770550540422, 0.0009228658487909569, 0.0008063105644295944, 0.0006795977504428768, 0.0006951669839871215, 0.0006166473499925312])
'''

#barrel
'''
sigma_arr_B = array('d', [0.3070429728095617, 0.14752370166397757, 0.08796626150377078, 0.07167525302825464, 0.053854485724718765, 0.048789478018061126, 0.04316043222987799, 0.04148226089512258, 0.041709831035905545, 0.03465818438206107, 0.02886398855383963, 0.031592500781162665, 0.03048072041067441, 0.028156697350413054, 0.028206580052691835, 0.025080420545775015, 0.02593157300003692, 0.022773386230234147, 0.022851819457184917, 0.023026106741691994])

sigma_err_arr_B = array('d', [0.009439157412631238, 0.0047216893520502096, 0.0028647294768809617, 0.0020502987650159316, 0.001696438012079457, 0.0025094717331558686, 0.002341093960636701, 0.002098556040762263, 0.0022851147339991544, 0.0018353212246244033, 0.0014495309663148694, 0.0014092401995797858, 0.0019379338714795597, 0.001470574970946591, 0.0013768521390450303, 0.0013503359752916125, 0.001463844573496513, 0.0013527287918863595, 0.00101510676352266, 0.0009708286547612556])
'''
#transition regions
'''
sigma_arr_B = array('d', [0.36621329706003947, 0.19586954568757475, 0.1371805126268942, 0.11185581877599376, 0.0811700846731315, 0.07605449109353524, 0.0646577939826317, 0.06660637918059882, 0.057492451383860284, 0.0503449890938679, 0.047018573336627824, 0.0477428216735883, 0.05805452828683992, 0.04782487239621923, 0.04914803523825539, 0.05092161916078047, 0.04265998246063796, 0.03681476411318727, 0.03889045394426011, 0.043685073150190726])

sigma_err_arr_B = array('d', [0.00853976506900933, 0.006335947445010245, 0.004473253643781622, 0.0038131825984768775, 0.004756409308504107, 0.009422817230815526, 0.005180184145716259, 0.006535642010019015, 0.004861673120131138, 0.00387394149847169, 0.0035337197383040267, 0.003960741327763789, 0.005611598264434508, 0.0037364602642860796, 0.003999234245090858, 0.0035163407658770317, 0.0030264039808220317, 0.002027430927633106, 0.00232061581403082, 0.002841721752377787])


e_err_arr_B = array('d', [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0])
'''
#Without BIB overlay
#e_arr_nB = array('d', [25.0, 75.0, 125.0, 175.0, 225.0, 275.0, 325.0, 375.0, 425.0, 475.0, 525.0, 575.0, 625.0, 675.0, 725.0, 775.0, 825.0, 875.0, 925.0, 975.0])

#endcaps
'''
sigma_arr_nB = array('d',[0.034540023422273254, 0.020421427736204714, 0.015798046135557915, 0.013661427375403249, 0.011712945362586389, 0.01078367913963539, 0.0100998344454897, 0.009337817699182953, 0.008399152879527333, 0.008216853080971583, 0.007788865090067924, 0.007520357926586827, 0.007565532217308041, 0.0068316074190271124, 0.0067241299167281575, 0.006580477485058115, 0.006467047428477386, 0.006322404439789447, 0.006445277524203791, 0.005918403955438667])


sigma_err_arr_nB = array('d',[0.0002318017033739947, 0.0002212986729716905, 0.00017633052997292984, 0.00014378979553089904, 0.00011837878031859591, 0.00021876048973944705, 0.00019238142815620248, 0.00019387606512456627, 0.00015214352246972675, 0.00016554036086930714, 0.00015163795333204312, 0.0001296356683223236, 0.000139768720824661, 0.00013110445103384737, 0.00013673206860628784, 0.00011928196131254232, 0.00011440868412212731, 0.00011954833490055274, 0.00011810330721888926, 0.0001105359067323855])
'''
#barrel
'''
sigma_arr_nB = array('d', [0.11848470973569804, 0.06586672663523072, 0.054460453811232094, 0.04529554195289596, 0.03728268283240702, 0.033855133524753805, 0.030262967574800202, 0.030442652529048507, 0.027299598446048505, 0.026487517304907657, 0.02529131229472518, 0.023866178221688794, 0.02179812557924338, 0.021370519537114045, 0.020546635004925942, 0.02031626426287653, 0.018888785491084976, 0.01909749494846428, 0.018627229661076182, 0.017093482041843622])

sigma_err_arr_nB = array('d', [0.0005272615903351638, 0.0004962092138575958, 0.00044339875762648695, 0.0003740982963326353, 0.0003010334966719319, 0.0005370376557778736, 0.0004920744668415016, 0.000506419104162794, 0.0004762531206921189, 0.0004262121886970151, 0.00039927537754249655, 0.0003841070071347284, 0.0003244001917181178, 0.00034848795251355563, 0.0003415215182791236, 0.0002920243761337562, 0.0003296675681277259, 0.0003061344721840258, 0.00035067851736346814, 0.0002897745468929541])
'''
#transition region
'''
sigma_arr_nB = array('d', [0.2023224934303919, 0.13688259567707783, 0.10536297607801831, 0.09019640729065478, 0.07738120070076734, 0.06936201465941333, 0.06472893524590317, 0.061900972150398526, 0.058221760915190025, 0.05490873688551751, 0.051727670785784816, 0.05009577006125806, 0.048538374498179264, 0.04804428546994499, 0.04425537776345259, 0.04350080263995161, 0.04292565737057982, 0.04212208698414203, 0.0407121970871387, 0.04170240543252858])
sigma_err_arr_nB = array('d', [0.0010420035248632359, 0.0012924078406360562, 0.0010109179579060254, 0.0009096263396753124, 0.0008122177126246161, 0.0014010499949240612, 0.0012861672632806936, 0.0012312023478889093, 0.0012239200934719661, 0.0010915552320400097, 0.0009996144353148217, 0.001138007047250502, 0.0009715327139172836, 0.001076505426637439, 0.001036891673402776, 0.0009002977518607971, 0.000903372345208691, 0.000803247718965408, 0.0009139052380966774, 0.0008774066350191838])


e_err_arr_nB = array('d', [25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0])
'''

fig, ax = plt.subplots()
plt.errorbar(e_arr_B, sigma_arr_B, yerr = sigma_err_arr_B, xerr = e_err_arr_B, fmt=".", color='red', 
        label = "With BIB overlay")
plt.errorbar(e_arr_nB, sigma_arr_nB, yerr= sigma_err_arr_nB, xerr = e_err_arr_nB, fmt = ".", color = 'blue',
        label = "Without BIB overlay")
plt.plot(Epoints, resopoints_B, '--', c='red',lw=0.25)#, label="Fit")
plt.plot(Epoints, resopoints_nB, '--', c='blue',lw=0.25)
plt.ylim(0.01,.8)
plt.xlim(10., 50.)
plt.xlabel("True Photon Energy [GeV]", loc='right')
plt.ylabel("Photon Energy Resolution $\sigma((E_{reco}-E_{true})/E_{true}$)", loc='top')
hep.cms.label(exp = "Muon Collider", data = False, label = 'with BIB (v0.4 Lattice) ', 
       rlabel='$MAIA$ Detector Concept', loc=2, italic=(1,0,0), pad=(0.0))
plt.gcf().text(0.16,0.74,"($\sqrt{s}=10$ TeV)")
#plt.gcf().text(0.16,0.7,"Transition Region ($0.577<\\theta<1.0$ or $2.0<\\theta<2.56$)")
#plt.gcf().text(0.16, 0.7, "Central Barrel Region ($1.0<\\theta<2.0$)")
plt.gcf().text(0.16,0.7, "Endcap Region ($\\theta < 0.577$ or $\\theta > 2.56$)")
ax.tick_params(bottom=True, top=True, left=True, right=True, which='both', direction='in')
ax.tick_params(labelbottom=True, labeltop=False, labelleft=True, labelright=False)
ax.tick_params(axis= 'y',which='major',length = 10)
ax.tick_params(axis='y',which='minor', length=5)

ax.xaxis.set_major_locator(MultipleLocator(5))
ax.xaxis.set_major_formatter('{x:.0f}')
ax.xaxis.set_minor_locator(MultipleLocator(1))

ax.yaxis.set_major_locator(MultipleLocator(0.1))
ax.yaxis.set_major_formatter('{x:.2f}')
ax.yaxis.set_minor_locator(MultipleLocator(0.02))

#plt.text(670,0.135, "MAIA", fontstyle = 'italic')
#plt.text(755, 0.135, "Detector Concept")
#plt.gcf().text(0.65,0.89, "MAIA", fontstyle='italic')
#plt.gcf().text(0.7,0.89, "Detector Concept")
#plt.text(670, 0.13, "BIB Overlay in [-0.5, 15] ns", fontsize = 'small')
plt.grid(axis = 'y', linestyle = ':')
plt.legend(loc='upper right',frameon=False)
plt.show()
plt.savefig("Ereso_EE_maia_PFOs_BIB_endcap_fg.pdf")
print("Ereso_EE_maia_PFOs_BIB_endcap_fg.pdf created")
plt.close()
